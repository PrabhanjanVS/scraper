version: '3.8'

services:
  crawler:
    #build:
    #  context: .
    # dockerfile: Dockerfile.crawler
    image: lol:latest
    container_name: crawler_service
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    networks:
      - scraper_network
  postgres:
    image: postgres:15-alpine
    container_name: amazon_scraper_postgres
    environment:
      POSTGRES_DB: amazon_scraper
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword123
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - scraper_network
    
  redis:
    image: redis:7-alpine
    container_name: amazon_scraper_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - scraper_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: amazon_scraper_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "admin123"
      PGADMIN_LISTEN_PORT: 80
      PGADMIN_ENABLE_EMAIL: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - scraper_network

  prometheus:
    image: prom/prometheus:latest
    container_name: amazon_scraper_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - scraper_network

  grafana:
    image: grafana/grafana:latest
    container_name: amazon_scraper_grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - scraper_network

volumes:
  postgres_data:  
  redis_data:
  pgadmin_data:
  prometheus_data:
  grafana_data:

networks:
  scraper_network:
    driver: bridge
